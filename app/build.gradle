apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply from: './dependencies.gradle'

repositories {
    jcenter()
    maven {
        url "https://jitpack.io"
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "cn.intret.app.picgo"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        jackOptions {
//            enabled true
//        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    buildTypes {
        debug {
            applicationVariants.all { variant ->

                if (variant.buildType.name.equals("release")
                        && (variant.productFlavors[0].name.equals("beta")
                        || variant.productFlavors[0].name.equals("production"))
                        && variant.outputs[0].zipAlign) {

                    changeApkName(variant, versionName, versionCode);
                }
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        production {
            versionName "1.0"
            versionCode 1 // todo get GIT code
        }
        beta {
            applicationIdSuffix 'beta'
            versionName "1.0"
            versionCode 1 // todo get GIT code
        }
    }

    sourceSets {

    }
}

def changeApkName(variant, versionName, versionCode) {
    variant.outputs.each { output ->
        def apk = output.outputFile
        def apkName = apk.name;

        // OLD:
        //   app-beta-debug.apk
        //   app-beta-unsigned-release.apk
        // NEW:
        //

        def ver = appendRevision((String) versionName);


        if (apkName.contains(project.name + "-beta-")) {
            apkName = apkName.replace(project.name + "-beta-", "app-${versionName}.${versionCode}-beta-");
        } else if (apkName.contains(project.name + "-production-")) {
            apkName = apkName.replace(project.name + "-production-", "app-${versionName}.${versionCode}-");
        } else if (apkName.contains(project.name + "-prerelease-")) {
            apkName = apkName.replace(project.name + "-prerelease-", "app-${versionName}.${versionCode}-prerelease-");
        } else {
            apkName = apkName.replace(project.name, "app-${versionName}");
        }

        // remove build type suffix
        apkName = apkName.replace("-${variant.buildType.name}.apk", ".apk");

        //apkName = apkName.replace(".apk", "-${variant.buildType.name.toLowerCase()}.apk");

        println "新的APK文件名称 : ${apkName} (<- ${apk.name})"
        output.outputFile = new File(apk.parentFile, apkName);
        if (output.zipAlign) {
            output.zipAlign.outputFile = new File(apk.parentFile, apkName.replace("-unaligned", ""));
        }
    }
}

String java8 = getJavaVersion(8)
String java7 = getJavaVersion(7)
// https://github.com/evant/gradle-retrolambda
retrolambda {
    jdk java8
    oldJdk java7
    javaVersion JavaVersion.VERSION_1_7
    defaultMethods false
    incremental true
}
// for OSX
import org.gradle.internal.os.OperatingSystem;

String getJavaVersion(Integer v) {
    // http://stackoverflow.com/questions/11235614/how-to-detect-the-current-os-from-gradle/11255194#11255194

    if (OperatingSystem.current().isMacOsX()) {
        def sout = new StringBuffer()
        def proc = "/usr/libexec/java_home -v 1.$v".execute()
        proc.consumeProcessOutput(sout, new StringBuffer())
        proc.waitForOrKill(1000)
        return sout.toString().replace("\n", "").replace("\r", "")
    } else if (OperatingSystem.current().isWindows()) {
        if (v == 8) {
            return System.getenv("JAVA8_HOME")
        } else if (v == 7) {
            return System.getenv("JAVA7_HOME")
        }
    } else {
        println("No implementation for this operating system.")
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:animated-vector-drawable:' + versions.supportLib
    compile 'com.android.support:appcompat-v7:' + versions.supportLib
    compile 'com.android.support:cardview-v7:' + versions.supportLib
    compile 'com.android.support:design:' + versions.supportLib
    compile 'com.android.support:mediarouter-v7:' + versions.supportLib
    compile 'com.android.support:recyclerview-v7:' + versions.supportLib
    compile 'com.android.support:support-v4:' + versions.supportLib

    compile('com.github.bumptech.glide:recyclerview-integration:4.0.0-RC1') {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }
    compile('com.github.thekhaeng:recycler-margin:1.2.0') {
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    compile('com.afollestad.material-dialogs:core:0.9.4.3') {
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    compile project(':sectioned-recyclerview')

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'de.cketti.share:share-intent-builder:0.0.2'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.andkulikov:transitionseverywhere:1.7.4'
    compile 'com.orhanobut:logger:2.1.1'
    compile 'com.noveogroup.android:android-logger:1.3.5'
    compile 'com.annimon:stream:1.1.8'
    compile 'com.github.rubensousa:floatingtoolbar:1.5.1'
    compile 'com.jaeger.statusbarutil:library:1.4.0'
    compile 'com.davemorrissey.labs:subsampling-scale-image-view:3.6.0'
    compile 'com.github.bumptech.glide:glide:4.0.0-RC1'
    compile 'com.github.chrisbanes:PhotoView:2.1.3'
    compile 'com.github.recruit-lifestyle:FloatingView:2.2.2'
    compile 'com.github.siyamed:android-shape-imageview:0.9.3'
    compile 'com.jakewharton:butterknife:8.7.0'
    compile 'com.truizlop.sectionedrecyclerview:library:1.2.0'
    compile 'commons-io:commons-io:2.5'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.1'
    compile 'joda-time:joda-time:2.9.9'
    compile 'org.apache.commons:commons-collections4:4.1'
    compile 'org.apache.commons:commons-lang3:3.6'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'pl.droidsonroids.gif:android-gif-drawable:1.2.7'
    testCompile 'junit:junit:4.12'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.7.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0-RC1'
}
